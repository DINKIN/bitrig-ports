--- src/core/view.cc.orig	Wed May 14 16:30:51 2014
+++ src/core/view.cc	Sun Nov  2 12:40:56 2014
@@ -177,7 +177,7 @@ View::initialize(const std::string& name) {
   m_focus = 0;
 
   set_last_changed(rak::timer());
-  m_delayChanged.slot() = std::tr1::bind(&View::emit_changed_now, this);
+  m_delayChanged.slot() = std::bind(&View::emit_changed_now, this);
 }
 
 void
@@ -282,11 +282,11 @@ View::filter() {
   // perhaps always clear them, thus not throwing anything.
   if (!m_event_removed.is_empty())
     std::for_each(changed.begin(), splitChanged,
-                  tr1::bind(&rpc::call_object_d_nothrow, m_event_removed, tr1::placeholders::_1));
+                  std::bind(&rpc::call_object_d_nothrow, m_event_removed, std::placeholders::_1));
 
   if (!m_event_added.is_empty())
     std::for_each(changed.begin(), splitChanged,
-                  tr1::bind(&rpc::call_object_d_nothrow, m_event_added, tr1::placeholders::_1));
+                  std::bind(&rpc::call_object_d_nothrow, m_event_added, std::placeholders::_1));
 
   emit_changed();
 }
