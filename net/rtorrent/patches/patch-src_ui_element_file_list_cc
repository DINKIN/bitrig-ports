--- src/ui/element_file_list.cc.orig	Wed May 14 16:30:51 2014
+++ src/ui/element_file_list.cc	Sun Nov  2 12:41:06 2014
@@ -63,17 +63,17 @@ ElementFileList::ElementFileList(core::Download* d) :
   m_selected(iterator(d->download()->file_list()->begin())),
   m_collapsed(false) {
 
-  m_bindings[KEY_LEFT]  = m_bindings['B' - '@'] = std::tr1::bind(&slot_type::operator(), &m_slot_exit);
-  m_bindings[KEY_RIGHT] = m_bindings['F' - '@'] = std::tr1::bind(&ElementFileList::receive_select, this);
+  m_bindings[KEY_LEFT]  = m_bindings['B' - '@'] = std::bind(&slot_type::operator(), &m_slot_exit);
+  m_bindings[KEY_RIGHT] = m_bindings['F' - '@'] = std::bind(&ElementFileList::receive_select, this);
 
-  m_bindings[' '] = std::tr1::bind(&ElementFileList::receive_priority, this);
-  m_bindings['*'] = std::tr1::bind(&ElementFileList::receive_change_all, this);
-  m_bindings['/'] = std::tr1::bind(&ElementFileList::receive_collapse, this);
-  m_bindings[KEY_NPAGE] = std::tr1::bind(&ElementFileList::receive_pagenext, this);
-  m_bindings[KEY_PPAGE] = std::tr1::bind(&ElementFileList::receive_pageprev, this);
+  m_bindings[' '] = std::bind(&ElementFileList::receive_priority, this);
+  m_bindings['*'] = std::bind(&ElementFileList::receive_change_all, this);
+  m_bindings['/'] = std::bind(&ElementFileList::receive_collapse, this);
+  m_bindings[KEY_NPAGE] = std::bind(&ElementFileList::receive_pagenext, this);
+  m_bindings[KEY_PPAGE] = std::bind(&ElementFileList::receive_pageprev, this);
 
-  m_bindings[KEY_DOWN] = m_bindings['N' - '@'] = std::tr1::bind(&ElementFileList::receive_next, this);
-  m_bindings[KEY_UP]   = m_bindings['P' - '@'] = std::tr1::bind(&ElementFileList::receive_prev, this);
+  m_bindings[KEY_DOWN] = m_bindings['N' - '@'] = std::bind(&ElementFileList::receive_next, this);
+  m_bindings[KEY_UP]   = m_bindings['P' - '@'] = std::bind(&ElementFileList::receive_prev, this);
 }
 
 inline ElementText*
@@ -117,7 +117,7 @@ ElementFileList::activate(display::Frame* frame, bool 
   m_window->set_focused(focus);
 
   m_elementInfo = element_file_list_create_info();
-  m_elementInfo->slot_exit(std::tr1::bind(&ElementFileList::activate_display, this, DISPLAY_LIST));
+  m_elementInfo->slot_exit(std::bind(&ElementFileList::activate_display, this, DISPLAY_LIST));
   m_elementInfo->set_target(rpc::make_target(&m_selected));
 
   m_frame = frame;
