--- src/control.cc.orig	Wed May 14 16:30:51 2014
+++ src/control.cc	Sun Nov  2 12:40:56 2014
@@ -39,6 +39,7 @@
 #include <unistd.h>
 #include <sys/stat.h>
 #include <torrent/connection_manager.h>
+#include <torrent/utils/directory_events.h>
 
 #include "core/manager.h"
 #include "core/download_store.h"
@@ -67,6 +68,7 @@ Control::Control() :
 
   m_commandScheduler(new rpc::CommandScheduler()),
   m_objectStorage(new rpc::object_storage()),
+  m_directory_events(new torrent::directory_events()),
 
   m_tick(0),
   m_shutdownReceived(false),
@@ -76,9 +78,9 @@ Control::Control() :
   m_viewManager = new core::ViewManager();
   m_dhtManager  = new core::DhtManager();
 
-  m_inputStdin->slot_pressed(std::tr1::bind(&input::Manager::pressed, m_input, std::tr1::placeholders::_1));
+  m_inputStdin->slot_pressed(std::bind(&input::Manager::pressed, m_input, std::placeholders::_1));
 
-  m_taskShutdown.slot() = std::tr1::bind(&Control::handle_shutdown, this);
+  m_taskShutdown.slot() = std::bind(&Control::handle_shutdown, this);
 
   m_commandScheduler->set_slot_error_message(rak::mem_fn(m_core, &core::Manager::push_log_std));
 }
@@ -94,6 +96,7 @@ Control::~Control() {
   delete m_core;
   delete m_dhtManager;
 
+  delete m_directory_events;
   delete m_commandScheduler;
   delete m_objectStorage;
 }
@@ -167,6 +170,7 @@ Control::handle_shutdown() {
       worker_thread->queue_item(&ThreadBase::stop_thread);
 
     torrent::connection_manager()->listen_close();
+    m_directory_events->close();
     m_core->shutdown(false);
 
     if (!m_taskShutdown.is_queued())
