--- src/torrent/download.cc.orig	Wed May 14 16:18:48 2014
+++ src/torrent/download.cc	Sun Nov  2 01:45:17 2014
@@ -72,6 +72,20 @@
 
 namespace torrent {
 
+const int DownloadInfo::flag_open;
+const int DownloadInfo::flag_active;
+const int DownloadInfo::flag_compact;
+const int DownloadInfo::flag_accepting_new_peers;
+const int DownloadInfo::flag_accepting_seeders;
+const int DownloadInfo::flag_private;
+const int DownloadInfo::flag_meta_download;
+const int DownloadInfo::flag_pex_enabled;
+const int DownloadInfo::flag_pex_active;
+
+const int DownloadInfo::public_flags;
+
+const uint32_t DownloadInfo::unlimited;
+
 const DownloadInfo* Download::info() const { return m_ptr->info(); }
 const download_data* Download::data() const { return m_ptr->data(); }
 
@@ -360,9 +374,11 @@ Download::set_bitfield(uint8_t* first, uint8_t* last) 
 void
 Download::update_range(int flags, uint32_t first, uint32_t last) {
   if (m_ptr->hash_checker()->is_checked() ||
-      m_ptr->hash_checker()->is_checking() ||
-      m_ptr->main()->file_list()->bitfield()->empty())
-    throw input_error("Download::clear_range(...) Download in invalid state.");
+      m_ptr->hash_checker()->is_checking())
+    throw input_error("Download::clear_range(...) Download is hash checked/checking.");
+
+  if (m_ptr->main()->file_list()->bitfield()->empty())
+    throw input_error("Download::clear_range(...) Bitfield is empty.");
 
   if (flags & update_range_recheck)
     m_ptr->hash_checker()->hashing_ranges().insert(first, last);
