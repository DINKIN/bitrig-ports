--- test/main.cc.orig	Thu Jan 19 11:19:27 2012
+++ test/main.cc	Sun Nov  2 01:45:17 2014
@@ -1,10 +1,19 @@
+#include <cppunit/BriefTestProgressListener.h>
 #include <cppunit/CompilerOutputter.h>
+#include <cppunit/TestResult.h>
+#include <cppunit/TestResultCollector.h>
 #include <cppunit/extensions/TestFactoryRegistry.h>
 #include <cppunit/ui/text/TestRunner.h>
 
-
 int main(int argc, char* argv[])
 {
+  CppUnit::TestResult controller;
+  CppUnit::TestResultCollector result;
+  CppUnit::BriefTestProgressListener progressListener;
+
+  controller.addListener( &result );        
+  controller.addListener( &progressListener );
+
   // Get the top level suite from the registry
   CppUnit::Test *suite = CppUnit::TestFactoryRegistry::getRegistry().makeTest();
 
@@ -15,9 +24,22 @@ int main(int argc, char* argv[])
   // Change the default outputter to a compiler error format outputter
   runner.setOutputter( new CppUnit::CompilerOutputter( &runner.result(),
                                                        std::cerr ) );
-  // Run the tests.
-  bool wasSucessful = runner.run();
+  try {
+    std::cout << "Running ";
+    runner.run( controller );
+ 
+    std::cerr << std::endl;
+ 
+    // Print test in a compiler compatible format.
+    CppUnit::CompilerOutputter outputter( &result, std::cerr );
+    outputter.write();                      
 
-  // Return error code 1 if the one of test failed.
-  return wasSucessful ? 0 : 1;
+  } catch ( std::invalid_argument &e ) { // Test path not resolved
+    std::cerr  <<  std::endl  
+               <<  "ERROR: "  <<  e.what()
+               << std::endl;
+    return 1;
+  }
+
+  return result.wasSuccessful() ? 0 : 1;
 }
