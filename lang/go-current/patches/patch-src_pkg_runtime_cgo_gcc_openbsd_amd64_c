$OpenBSD$
--- src/pkg/runtime/cgo/gcc_openbsd_amd64.c.orig	Mon Jan 21 19:30:18 2013
+++ src/pkg/runtime/cgo/gcc_openbsd_amd64.c	Mon Jan 21 19:33:57 2013
@@ -12,14 +12,6 @@
 
 static void* threadentry(void*);
 
-// TCB_SIZE is sizeof(struct thread_control_block),
-// as defined in /usr/src/lib/librthread/tcb.h
-#define TCB_SIZE (4 * sizeof(void *))
-#define TLS_SIZE (2 * sizeof(void *))
-
-void *__get_tcb(void);
-void __set_tcb(void *);
-
 static int (*sys_pthread_create)(pthread_t *thread, const pthread_attr_t *attr,
 	void *(*start_routine)(void *), void *arg);
 
@@ -28,6 +20,15 @@ struct thread_args {
 	void *arg;
 };
 
+#if !defined(__Bitrig__)
+// TCB_SIZE is sizeof(struct thread_control_block),
+// as defined in /usr/src/lib/librthread/tcb.h
+#define TCB_SIZE (4 * sizeof(void *))
+#define TLS_SIZE (2 * sizeof(void *))
+
+void *__get_tcb(void);
+void __set_tcb(void *);
+
 static void
 tcb_fixup(int mainthread)
 {
@@ -52,6 +53,7 @@ tcb_fixup(int mainthread)
 	if(!mainthread)
 		free(oldtcb);
 }
+#endif
 
 static void *
 thread_start_wrapper(void *arg)
@@ -59,8 +61,9 @@ thread_start_wrapper(void *arg)
 	struct thread_args args = *(struct thread_args *)arg;
 
 	free(arg);
+#if !defined(__Bitrig__)
 	tcb_fixup(0);
-
+#endif
 	return args.func(args.arg);
 }
 
@@ -106,7 +109,9 @@ xinitcgo(G *g)
 	}
 	dlclose(handle);
 
+#if !defined(__Bitrig__)
 	tcb_fixup(1);
+#endif
 }
 
 void (*initcgo)(G*) = xinitcgo;
@@ -142,7 +147,9 @@ threadentry(void *v)
 {
 	ThreadStart ts;
 
+#if !defined(__Bitrig__)
 	tcb_fixup(0);
+#endif
 
 	ts = *(ThreadStart*)v;
 	free(v);
