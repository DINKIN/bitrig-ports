$OpenBSD: patch-gcc_config_gcc,v 1.5 2014/01/12 22:16:02 pascal Exp $
--- gcc/config.gcc.orig	Sun Feb 24 16:51:55 2013
+++ gcc/config.gcc	Mon Jan 13 20:42:22 2014
@@ -401,7 +401,7 @@ case $machine in
 		;;
 	esac
 	;;
-*-*-openbsd*)
+*-*-openbsd* | *-*-bitrig*)
 	case $machine in
 	*-*-openbsd2* | *-*-openbsd3.[012])
 		openbsd_libspec="openbsd-libc_r.h"
@@ -703,7 +703,7 @@ arm*-*-netbsdelf*)
 	tm_file="dbxelf.h elfos.h netbsd.h netbsd-elf.h arm/elf.h arm/aout.h arm/arm.h arm/netbsd-elf.h"
 	tmake_file="${tmake_file} arm/t-netbsd"
 	;;
-arm*-*-openbsd*)
+arm*-*-openbsd* | arm*-*-bitrig*)
 	tm_file="dbxelf.h elfos.h arm/openbsd1.h arm/elf.h arm/aout.h arm/arm.h openbsd.h ${tm_file}"
 	tm_file="${tm_file} exec-stack.h"
 	tmake_file="${tmake_file} arm/t-openbsd"
@@ -1173,7 +1173,8 @@ i[34567]86-*-openbsd2* | i[34567]86-*-openbsd3.[0123])
 	# we need collect2 until our bug is fixed...
 	use_collect2=yes
 	;;
-i[34567]86-*-openbsd*)
+i[34567]86-*-openbsd* | i[34567]86-*-bitrig*)
+	tm_defines="${tm_defines} PIE_DEFAULT=1"
 	# needed to unconfuse gdb
 	tmake_file="t-libc-ok t-openbsd i386/t-openbsd"
 	tm_file="${cpu_type}/${cpu_type}.h i386/unix.h i386/att.h dbxelf.h elfos.h"
@@ -1182,7 +1183,7 @@ i[34567]86-*-openbsd*)
 	gas=yes
 	gnu_ld=yes
   	;;
-x86_64-*-openbsd*)
+x86_64-*-openbsd* | x86_64-*-bitrig*)
 	tm_defines="${tm_defines} PIE_DEFAULT=1"
 	tm_file="i386/biarch64.h i386/i386.h i386/unix.h i386/att.h dbxelf.h elfos.h openbsd.h openbsd-libpthread.h i386/x86-64.h i386/openbsd64.h"
 	tm_file="${tm_file} exec-stack.h"
@@ -2780,10 +2781,13 @@ vax-*-netbsd*)
 	use_collect2=yes
 	;;
 vax-*-openbsd*)
-	tmake_file="t-libc-ok t-openbsd"
-	tm_file="vax/vax.h vax/openbsd1.h openbsd.h ${tm_file}"
+	tm_file="openbsd-libpthread.h vax/vax.h dbxelf.h elfos.h vax/openbsd1.h openbsd.h vax/elf.h vax/openbsdelf.h"
 #	tm_file="${tm_file} exec-stack.h"
-	use_collect2=yes
+	tmake_file="t-libc-ok t-openbsd"
+	if test x$enable_threads = xyes; then
+		tmake_file="${tmake_file} t-openbsd-thread"
+	fi
+	float_format=vax
 	;;
 vax-*-ultrix*)			# VAXen running ultrix
 	tm_file="${tm_file} vax/ultrix.h"
