--- lib/Menu.cc.orig	Thu Jan 27 18:08:22 2005
+++ lib/Menu.cc	Sat Apr 26 22:57:11 2014
@@ -36,6 +36,7 @@
 #include <stdio.h>
 #include <assert.h>
 
+#include <cstdlib>
 
 bt::MenuStyle **bt::MenuStyle::styles = 0;
 
@@ -363,7 +364,7 @@ unsigned int bt::Menu::insertItem(const MenuItem &item
   } else {
     index = std::min(static_cast<size_t>(index), _items.size());
     it = _items.begin();
-    std::advance<ItemList::iterator, signed>(it, index);
+    std::advance(it, signed(index));
   }
 
   it = _items.insert(it, item);
@@ -514,7 +515,7 @@ void bt::Menu::removeItem(unsigned int id) {
 
 void bt::Menu::removeIndex(unsigned int index) {
   ItemList::iterator it = _items.begin();
-  std::advance<ItemList::iterator, signed>(it, index);
+  std::advance(it, signed(index));
   if (it == _items.end())
     return; // item not found
   removeItemByIterator(it);
@@ -1035,7 +1036,7 @@ void bt::Menu::keyPressEvent(const XKeyEvent * const e
     const ItemList::const_iterator &end = _items.end();
     ItemList::const_iterator anchor = _items.begin();
     if (_active_index != ~0u) {
-      std::advance<ItemList::const_iterator, signed>(anchor, _active_index);
+      std::advance(anchor, signed(_active_index));
 
       // go one paste the current active index
       if (anchor != end && !anchor->separator)
@@ -1055,8 +1056,7 @@ void bt::Menu::keyPressEvent(const XKeyEvent * const e
     ItemList::const_reverse_iterator anchor = _items.rbegin();
     const ItemList::const_reverse_iterator &end = _items.rend();
     if (_active_index != ~0u) {
-      std::advance<ItemList::const_reverse_iterator, signed>
-        (anchor, _items.size() - _active_index - 1);
+      std::advance(anchor, signed(_items.size() - _active_index - 1));
 
       // go one item past the current active index
       if (anchor != end && !anchor->separator)
