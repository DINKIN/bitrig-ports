$OpenBSD$
--- tools/clang/lib/Basic/Targets.cpp.orig	Thu Sep 20 11:12:43 2012
+++ tools/clang/lib/Basic/Targets.cpp	Thu Sep 20 14:47:02 2012
@@ -406,6 +406,7 @@ class BitrigTargetInfo : public OSTargetInfo<Target> {
     // Bitrig defines; list based off of gcc output
 
     Builder.defineMacro("__Bitrig__");
+    Builder.defineMacro("__OpenBSD__");
     DefineStd(Builder, "unix", Opts);
     Builder.defineMacro("__ELF__");
     if (Opts.POSIXThreads)
@@ -3533,7 +3534,7 @@ class ARMTargetInfo : public TargetInfo {
     // the kernel which on armv6 and newer uses ldrex and strex. The net result
     // is that if we assume the kernel is at least as recent as the hardware,
     // it is safe to use atomic instructions on armv6 and newer.
-    if (T.getOS() != llvm::Triple::Linux)
+    if (T.getOS() != llvm::Triple::Linux && T.getOS() != llvm::Triple::Bitrig)
      return false;
     StringRef ArchName = T.getArchName();
     if (T.getArch() == llvm::Triple::arm) {
