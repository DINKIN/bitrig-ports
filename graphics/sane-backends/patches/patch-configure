$OpenBSD: patch-configure,v 1.16 2016/01/09 09:52:03 ajacoutot Exp $
--- configure.orig	Sun Oct  4 08:18:39 2015
+++ configure	Wed Apr 13 08:29:15 2016
@@ -5310,7 +5310,7 @@ if ${my_cv_LINKER_RPATH+:} false; then :
 else
   my_cv_LINKER_RPATH=
       case "$host_os" in
-      linux* | freebsd* | netbsd* | openbsd* | irix*)
+      linux* | freebsd* | netbsd* | openbsd* | bitrig* | irix*)
         # I believe this only works with GNU ld [pere 2001-04-16]
         my_cv_LINKER_RPATH="-Wl,-rpath,"
         ;;
@@ -7494,18 +7494,6 @@ if test "${with_group+set}" = set; then :
 
 fi
 
-    # check if the group does exist
-    lasterror=""
-    touch sanetest.file
-    chgrp $LOCKPATH_GROUP sanetest.file 2>/dev/null || lasterror=$?
-    rm -f sanetest.file
-    if test ! -z "$lasterror"; then
-      { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Group $LOCKPATH_GROUP does not exist on this system." >&5
-$as_echo "$as_me: WARNING: Group $LOCKPATH_GROUP does not exist on this system." >&2;}
-      { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Locking feature will be disabled." >&5
-$as_echo "$as_me: WARNING: Locking feature will be disabled." >&2;}
-      use_locking=no
-    fi
   fi
   if test $use_locking = yes ; then
     INSTALL_LOCKPATH=install-lockpath
@@ -8158,7 +8146,7 @@ $as_echo "#define STDC_HEADERS 1" >>confdefs.h
 
 fi
 
-for ac_header in fcntl.h unistd.h libc.h sys/dsreq.h sys/select.h \
+for ac_header in fcntl.h unistd.h sys/dsreq.h sys/select.h \
     sys/time.h sys/shm.h sys/ipc.h sys/signal.h sys/scanio.h os2.h \
     sys/socket.h sys/io.h sys/hw.h sys/types.h linux/ppdev.h \
     dev/ppbus/ppi.h machine/cpufunc.h sys/bitypes.h sys/sem.h sys/poll.h \
@@ -8416,6 +8404,7 @@ $as_echo_n "checking for socklen_t in <sys/socket.h>..
 cat confdefs.h - <<_ACEOF >conftest.$ac_ext
 /* end confdefs.h.  */
 
+#include <sys/types.h>
 #include <sys/socket.h>
 
 int
@@ -11578,7 +11567,7 @@ else
     lt_cv_sys_max_cmd_len=8192;
     ;;
 
-  netbsd* | freebsd* | openbsd* | darwin* | dragonfly*)
+  netbsd* | freebsd* | openbsd* | bitrig* | darwin* | dragonfly*)
     # This has been around since 386BSD, at least.  Likely further.
     if test -x /sbin/sysctl; then
       lt_cv_sys_max_cmd_len=`/sbin/sysctl -n kern.argmax`
@@ -12090,7 +12079,7 @@ newos6*)
   lt_cv_deplibs_check_method=pass_all
   ;;
 
-openbsd*)
+openbsd* | bitrig*)
   if test -z "`echo __ELF__ | $CC -E - | $GREP __ELF__`" || test "$host_os-$host_cpu" = "openbsd2.8-powerpc"; then
     lt_cv_deplibs_check_method='match_pattern /lib[^/]+(\.so\.[0-9]+\.[0-9]+|\.so|_pic\.a)$'
   else
@@ -12703,7 +12692,7 @@ old_postuninstall_cmds=
 
 if test -n "$RANLIB"; then
   case $host_os in
-  openbsd*)
+  openbsd* | bitrig*)
     old_postinstall_cmds="$old_postinstall_cmds~\$RANLIB -t \$tool_oldlib"
     ;;
   *)
@@ -15167,7 +15156,7 @@ $as_echo_n "checking whether the $compiler linker ($LD
     # we just hope/assume this is gcc and not c89 (= MSVC++)
     with_gnu_ld=yes
     ;;
-  openbsd*)
+  openbsd* | bitrig*)
     with_gnu_ld=no
     ;;
   esac
@@ -16043,7 +16032,7 @@ $as_echo "$lt_cv_irix_exported_symbol" >&6; }
     *nto* | *qnx*)
       ;;
 
-    openbsd*)
+    openbsd* | bitrig*)
       if test -f /usr/libexec/ld.so; then
 	hardcode_direct=yes
 	hardcode_shlibpath_var=no
@@ -17090,7 +17079,7 @@ newsos6)
   dynamic_linker='ldqnx.so'
   ;;
 
-openbsd*)
+openbsd* | bitrig*)
   version_type=sunos
   sys_lib_dlsearch_path_spec="/usr/lib"
   need_lib_prefix=no
@@ -18182,8 +18171,7 @@ for be in ${BACKENDS}; do
     ;;
 
     v4l)
-    if test "${have_linux_ioctl_defines}" != "yes" \
-      || test "${have_libv4l1}" != "yes"; then
+    if test "${have_libv4l1}" != "yes"; then
       echo "*** $be backend requires v4l libraries - $DISABLE_MSG"
       backend_supported="no"
     fi
