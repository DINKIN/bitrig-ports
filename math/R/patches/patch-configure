$OpenBSD: patch-configure,v 1.15 2012/10/29 11:07:29 dcoppa Exp $

Unbreak build on powerpc (relocation truncated to fit: R_PPC_GOT16...)

Fix "--export-dynamic" linker flag

Fix linking with external libintl

--- configure.orig	Fri Oct 19 00:05:56 2012
+++ configure	Sun Feb 24 19:47:25 2013
@@ -9023,7 +9023,7 @@ else
     lt_cv_sys_max_cmd_len=8192;
     ;;
 
-  netbsd* | freebsd* | openbsd* | darwin* | dragonfly*)
+  netbsd* | freebsd* | openbsd* | bitrig* | darwin* | dragonfly*)
     # This has been around since 386BSD, at least.  Likely further.
     if test -x /sbin/sysctl; then
       lt_cv_sys_max_cmd_len=`/sbin/sysctl -n kern.argmax`
@@ -9448,7 +9448,7 @@ newos6*)
   lt_cv_deplibs_check_method=pass_all
   ;;
 
-openbsd*)
+openbsd* | bitrig*)
   if test -z "`echo __ELF__ | $CC -E - | $GREP __ELF__`" || test "$host_os-$host_cpu" = "openbsd2.8-powerpc"; then
     lt_cv_deplibs_check_method='match_pattern /lib[^/]+(\.so\.[0-9]+\.[0-9]+|\.so|_pic\.a)$'
   else
@@ -9832,7 +9832,7 @@ old_postuninstall_cmds=
 
 if test -n "$RANLIB"; then
   case $host_os in
-  openbsd*)
+  openbsd* | bitrig*)
     old_postinstall_cmds="$old_postinstall_cmds~\$RANLIB -t \$oldlib"
     ;;
   *)
@@ -12438,7 +12438,7 @@ $as_echo_n "checking whether the $compiler linker ($LD
     # we just hope/assume this is gcc and not c89 (= MSVC++)
     with_gnu_ld=yes
     ;;
-  openbsd*)
+  openbsd* | bitrig*)
     with_gnu_ld=no
     ;;
   esac
@@ -13146,7 +13146,7 @@ rm -f core conftest.err conftest.$ac_objext \
     *nto* | *qnx*)
       ;;
 
-    openbsd*)
+    openbsd* | bitrig*)
       if test -f /usr/libexec/ld.so; then
 	hardcode_direct=yes
 	hardcode_shlibpath_var=no
@@ -14106,7 +14106,7 @@ newsos6)
   dynamic_linker='ldqnx.so'
   ;;
 
-openbsd*)
+openbsd* | bitrig*)
   version_type=sunos
   sys_lib_dlsearch_path_spec="/usr/lib"
   need_lib_prefix=no
@@ -15904,7 +15904,7 @@ if test -z "$aix_libpath"; then aix_libpath="/usr/lib:
 	ld_shlibs_CXX=no
 	;;
 
-      openbsd*)
+      openbsd* | bitrig*)
 	if test -f /usr/libexec/ld.so; then
 	  hardcode_direct_CXX=yes
 	  hardcode_shlibpath_var_CXX=no
@@ -17552,7 +17552,7 @@ newsos6)
   dynamic_linker='ldqnx.so'
   ;;
 
-openbsd*)
+openbsd* | bitrig*)
   version_type=sunos
   sys_lib_dlsearch_path_spec="/usr/lib"
   need_lib_prefix=no
@@ -18529,7 +18529,7 @@ $as_echo_n "checking whether the $compiler linker ($LD
     # we just hope/assume this is gcc and not c89 (= MSVC++)
     with_gnu_ld=yes
     ;;
-  openbsd*)
+  openbsd* | bitrig*)
     with_gnu_ld=no
     ;;
   esac
@@ -19224,7 +19224,7 @@ rm -f core conftest.err conftest.$ac_objext \
     *nto* | *qnx*)
       ;;
 
-    openbsd*)
+    openbsd* | bitrig*)
       if test -f /usr/libexec/ld.so; then
 	hardcode_direct_F77=yes
 	hardcode_shlibpath_var_F77=no
@@ -20024,7 +20024,7 @@ newsos6)
   dynamic_linker='ldqnx.so'
   ;;
 
-openbsd*)
+openbsd* | bitrig*)
   version_type=sunos
   sys_lib_dlsearch_path_spec="/usr/lib"
   need_lib_prefix=no
@@ -25812,7 +25812,7 @@ fi
         ;;
     esac
     ;;
-  openbsd*)
+  openbsd* | bitrig*)
     if test -z "`echo __ELF__ | $CC -E - | grep __ELF__`"; then
       $as_echo "#define HAVE_NO_SYMBOL_UNDERSCORE 1" >>confdefs.h
 
@@ -26063,7 +26063,7 @@ if test "${GCC}" = yes; then
 ## has 32k and so can use -fpic.
 ## However, although the gcc docs do not mention it, it seems s390/s390x
 ## also supports and needs -fPIC
-    sparc*|ppc64|powerpc64|s390*)
+    sparc*|ppc64|powerpc*|s390*)
       cpicflags="-fPIC"
       ;;
     *)
@@ -26074,7 +26074,7 @@ if test "${GCC}" = yes; then
 fi
 if test "${G77}" = yes; then
   case "${host_cpu}" in
-    sparc*|ppc64|powerpc64|s390*)
+    sparc*|ppc64|powerpc*|s390*)
       fpicflags="-fPIC"
       ;;
     *)
@@ -26084,7 +26084,7 @@ if test "${G77}" = yes; then
 fi
 if test "${GXX}" = yes; then
   case "${host_cpu}" in
-    sparc*|ppc64|powerpc64|s390*)
+    sparc*|ppc64|powerpc*|s390*)
       cxxpicflags="-fPIC"
       ;;
     *)
@@ -26334,10 +26334,10 @@ $as_echo "$as_me: WARNING: Use of flat namespace is re
       shlib_ldflags="-Bshareable"
     fi
     ;;
-  openbsd*)
+  openbsd* | bitrig*)
     ## looks like ${wl} is not defined here.  Perhaps in libtool code?
     if test -z "`echo __ELF__ | $CC -E - | grep __ELF__`"; then
-      main_ldflags="${wl}-export-dynamic"
+      main_ldflags="${wl}--export-dynamic"
       shlib_ldflags="-shared -fPIC"
     fi
     ;;
@@ -26528,13 +26528,6 @@ case "${host_os}" in
       LAPACK_LDFLAGS="+s"
     fi
     ;;
-  openbsd*)
-    PACKAGE_VERSION_MAJOR=`echo "${PACKAGE_VERSION}" | \
-      sed -e "s/\.//" -e "s/\..*$//"`
-    PACKAGE_VERSION_MINOR=`echo "${PACKAGE_VERSION}" | \
-      sed -e "s/.*\.\([^.][^.]*$\)/\1/"`
-    DYLIB_EXT=".so.${PACKAGE_VERSION_MAJOR}.${PACKAGE_VERSION_MINOR}"
-    ;;
 esac
 
 if test -z "${DYLIB_LD}"; then
@@ -36404,7 +36397,7 @@ $as_echo_n "checking whether the $compiler linker ($LD
     # we just hope/assume this is gcc and not c89 (= MSVC++)
     with_gnu_ld=yes
     ;;
-  openbsd*)
+  openbsd* | bitrig*)
     with_gnu_ld=no
     ;;
   esac
@@ -37099,7 +37092,7 @@ rm -f core conftest.err conftest.$ac_objext \
     *nto* | *qnx*)
       ;;
 
-    openbsd*)
+    openbsd* | bitrig*)
       if test -f /usr/libexec/ld.so; then
 	hardcode_direct_FC=yes
 	hardcode_shlibpath_var_FC=no
@@ -37899,7 +37892,7 @@ newsos6)
   dynamic_linker='ldqnx.so'
   ;;
 
-openbsd*)
+openbsd* | bitrig*)
   version_type=sunos
   sys_lib_dlsearch_path_spec="/usr/lib"
   need_lib_prefix=no
@@ -38391,7 +38384,7 @@ fi
 ## use this to pick out gfortran (even though it is unreliable).
 if test "${ac_cv_fc_compiler_gnu}" = yes; then
   case "${host_cpu}" in
-    sparc*|ppc64|powerpc64|s390*)
+    sparc*|ppc64|powerpc*|s390*)
       fcpicflags="-fPIC"
       ;;
     *)
@@ -42499,7 +42492,7 @@ else
   gt_save_CPPFLAGS="$CPPFLAGS"
             CPPFLAGS="$CPPFLAGS $INCINTL"
             gt_save_LIBS="$LIBS"
-            LIBS="$LIBS $LIBINTL"
+            LIBS="$LIBS $LTLIBINTL"
                         cat confdefs.h - <<_ACEOF >conftest.$ac_ext
 /* end confdefs.h.  */
 #include <libintl.h>
@@ -42656,8 +42649,8 @@ $as_echo "$gt_source" >&6; }
       if { eval "gt_val=\$$gt_func_gnugettext_libintl"; test "$gt_val" = "yes"; }; then
         { $as_echo "$as_me:${as_lineno-$LINENO}: checking how to link with libintl" >&5
 $as_echo_n "checking how to link with libintl... " >&6; }
-        { $as_echo "$as_me:${as_lineno-$LINENO}: result: $LIBINTL" >&5
-$as_echo "$LIBINTL" >&6; }
+        { $as_echo "$as_me:${as_lineno-$LINENO}: result: $LTLIBINTL" >&5
+$as_echo "$LTLIBINTL" >&6; }
 
   for element in $INCINTL; do
     haveit=
