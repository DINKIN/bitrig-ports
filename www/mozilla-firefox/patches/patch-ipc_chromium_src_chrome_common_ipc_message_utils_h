$OpenBSD$
--- ipc/chromium/src/chrome/common/ipc_message_utils.h.orig	Thu Jun 14 20:49:39 2012
+++ ipc/chromium/src/chrome/common/ipc_message_utils.h	Wed Jul 18 19:36:12 2012
@@ -168,7 +168,7 @@
     l->append(StringPrintf(L"%ul", p));
   }
 };
-#if (defined(OS_OPENBSD) && defined(ARCH_CPU_64_BITS))
+#if ((defined(OS_OPENBSD) || defined(OS_BITRIG)) && defined(ARCH_CPU_64_BITS))
 // On OpenBSD, uint64_t is unsigned long long
 // see https://bugzilla.mozilla.org/show_bug.cgi?id=648735#c27
 template <>
@@ -193,9 +193,32 @@
     l->append(StringPrintf(L"%ull", p));
   }
 };
+
+template <>
+struct ParamTraits<long long> {
+  typedef long long param_type;
+  static void Write(Message* m, const param_type& p) {
+    m->WriteData(reinterpret_cast<const char*>(&p), sizeof(param_type));
+ }
+  static bool Read(const Message* m, void** iter, param_type* r) {
+    const char *data;
+    int data_size = 0;
+    bool result = m->ReadData(iter, &data, &data_size);
+    if (result && data_size == sizeof(param_type)) {
+      memcpy(r, data, sizeof(param_type));
+    } else {
+      result = false;
+      NOTREACHED();
+    }
+    return result;
+  }
+  static void Log(const param_type& p, std::wstring* l) {
+    l->append(StringPrintf(L"%ull", p));
+  }
+};
 #endif
 
-#if !(defined(OS_MACOSX) || defined(OS_OPENBSD) || defined(OS_WIN) || (defined(OS_LINUX) && defined(ARCH_CPU_64_BITS)) || defined(ARCH_CPU_S390))
+#if !(defined(OS_MACOSX) || defined(OS_OPENBSD) || defined(OS_BITRIG) || defined(OS_WIN) || (defined(OS_LINUX) && defined(ARCH_CPU_64_BITS)) || defined(ARCH_CPU_S390))
 // There size_t is a synonym for |unsigned long| ...
 template <>
 struct ParamTraits<size_t> {
