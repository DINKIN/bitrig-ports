--- libstreamanalyzer/plugins/endplugins/ffmpegendanalyzer.cpp.orig	Tue Feb  9 10:08:01 2016
+++ libstreamanalyzer/plugins/endplugins/ffmpegendanalyzer.cpp	Tue Feb  9 10:08:05 2016
@@ -56,22 +56,22 @@ class STRIGI_PLUGIN_API FFMPEGEndAnalyzer : public Str
     signed char analyze(AnalysisResult& idx, ::InputStream* in);
 };
 
-STRIGI_MUTEX_DEFINE(mutex);
+STRIGI_MUTEX_DEFINE(gmutex);
 
 static int
 lockmgr(void **mtx, enum AVLockOp op) {
-  // pre-allocating a single mutex is the only way to get it to work without changing strigi_thread.h
-  assert( (*mtx == &mutex) || (op == AV_LOCK_CREATE) );
+  // pre-allocating a single gmutex is the only way to get it to work without changing strigi_thread.h
+  assert( (*mtx == &gmutex) || (op == AV_LOCK_CREATE) );
   switch(op) {
   case AV_LOCK_CREATE:
-    *mtx = &mutex;
-    return !!STRIGI_MUTEX_INIT(&mutex);
+    *mtx = &gmutex;
+    return !!STRIGI_MUTEX_INIT(&gmutex);
   case AV_LOCK_OBTAIN:
-    return !!STRIGI_MUTEX_LOCK(&mutex);
+    return !!STRIGI_MUTEX_LOCK(&gmutex);
   case AV_LOCK_RELEASE:
-    return !!STRIGI_MUTEX_UNLOCK(&mutex);
+    return !!STRIGI_MUTEX_UNLOCK(&gmutex);
   case AV_LOCK_DESTROY:
-    STRIGI_MUTEX_DESTROY(&mutex);
+    STRIGI_MUTEX_DESTROY(&gmutex);
     return 0;
   }
   return 1;
