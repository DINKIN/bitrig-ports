$OpenBSD: patch-tools_clang_lib_Driver_Tools_cpp,v 1.8 2011/12/14 22:58:23 sthen Exp $

- let profiling work on OpenBSD

--- tools/clang/lib/Driver/Tools.cpp.orig	Mon Nov  7 04:27:39 2011
+++ tools/clang/lib/Driver/Tools.cpp	Sat Mar  3 10:17:33 2012
@@ -1738,8 +1738,11 @@ void Clang::ConstructJob(Compilation &C, const JobActi
     else if (A->getOption().matches(options::OPT_fstack_protector_all))
       StackProtectorLevel = 2;
   } else {
-    StackProtectorLevel =
-      getToolChain().GetDefaultStackProtectorLevel(KernelOrKext);
+    if (getToolChain().getTriple().getOS() == llvm::Triple::OpenBSD)
+      StackProtectorLevel = 1;
+    else
+      StackProtectorLevel =
+        getToolChain().GetDefaultStackProtectorLevel(KernelOrKext);
   }
   if (StackProtectorLevel) {
     CmdArgs.push_back("-stack-protector");
@@ -3805,9 +3808,13 @@ void openbsd::Link::ConstructJob(Compilation &C, const
   if (!Args.hasArg(options::OPT_nostdlib) &&
       !Args.hasArg(options::OPT_nostartfiles)) {
     if (!Args.hasArg(options::OPT_shared)) {
+      if (Args.hasArg(options::OPT_pg))  
+        CmdArgs.push_back(Args.MakeArgString(
+                                getToolChain().GetFilePath("gcrt0.o")));
+      else
+        CmdArgs.push_back(Args.MakeArgString(
+                                getToolChain().GetFilePath("crt0.o")));
       CmdArgs.push_back(Args.MakeArgString(
-                              getToolChain().GetFilePath("crt0.o")));
-      CmdArgs.push_back(Args.MakeArgString(
                               getToolChain().GetFilePath("crtbegin.o")));
     } else {
       CmdArgs.push_back(Args.MakeArgString(
@@ -3818,8 +3825,11 @@ void openbsd::Link::ConstructJob(Compilation &C, const
   std::string Triple = getToolChain().getTripleString();
   if (Triple.substr(0, 6) == "x86_64")
     Triple.replace(0, 6, "amd64");
+  // old openbsd path, keep for now
   CmdArgs.push_back(Args.MakeArgString("-L/usr/lib/gcc-lib/" + Triple +
                                        "/4.2.1"));
+  CmdArgs.push_back(Args.MakeArgString("-L/usr/local/lib/gcc/" + Triple +
+                                       "/4.6.2"));
 
   Args.AddAllArgs(CmdArgs, options::OPT_L);
   Args.AddAllArgs(CmdArgs, options::OPT_T_Group);
@@ -3831,7 +3841,10 @@ void openbsd::Link::ConstructJob(Compilation &C, const
       !Args.hasArg(options::OPT_nodefaultlibs)) {
     if (D.CCCIsCXX) {
       getToolChain().AddCXXStdlibLibArgs(Args, CmdArgs);
-      CmdArgs.push_back("-lm");
+      if (Args.hasArg(options::OPT_pg)) 
+        CmdArgs.push_back("-lm_p");
+      else
+        CmdArgs.push_back("-lm");
     }
 
     // FIXME: For some reason GCC passes -lgcc before adding
@@ -3841,7 +3854,10 @@ void openbsd::Link::ConstructJob(Compilation &C, const
     if (Args.hasArg(options::OPT_pthread))
       CmdArgs.push_back("-lpthread");
     if (!Args.hasArg(options::OPT_shared))
-      CmdArgs.push_back("-lc");
+      if (Args.hasArg(options::OPT_pg)) 
+         CmdArgs.push_back("-lc_p");
+      else
+         CmdArgs.push_back("-lc");
     CmdArgs.push_back("-lgcc");
   }
 
